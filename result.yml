openapi: 3.0.0
info:
  title: Swagger
  description: Swagger
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Scodus
    url: https://scodus.com
    email: scodusnp@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: https://social-media-manager.scoduscorp.com/
    description: social media manager
components:
  securitySchemes:
    noauthAuth:
      type: http
      scheme: noauth
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: social media connect
  - name: Superadmin
  - name: Superadmin > Authentication
  - name: Superadmin > Permission
  - name: Superadmin > Role
  - name: Superadmin > User
  - name: Superadmin > Dashboard
  - name: Superadmin > Site Setting
  - name: Superadmin > Post
  - name: General
  - name: General > Authentication
  - name: General > Authentication > social login
  - name: General > Social Media
  - name: General > Post
  - name: General > Note
paths:
  /oauth/access_token:
    post:
      tags:
        - social media connect
      summary: get meta access token
      requestBody:
        content: {}
      parameters:
        - name: client_id
          in: query
          schema:
            type: integer
          example: '965606961836993'
        - name: client_secret
          in: query
          schema:
            type: string
          example: cacd039934f0d34f365e2ff7c6850be5
        - name: grant_type
          in: query
          schema:
            type: string
          example: client_credentials
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v19.0/2600212316820631/accounts:
    get:
      tags:
        - social media connect
      summary: get page id name
      parameters:
        - name: access_token
          in: query
          schema:
            type: string
          example: >-
            EAALFjk9QZAP8BO7HRboinM2Arg78KKQtaZBZAELQnMNRIHT8RoPvWEs5DTdq1T0ZCGZAJprOznVPZAqWKW3pAnda7n29Bwbo79RNW96shC49T0DZB832Cm2mbvgmHAs9GFmi7KFdfR0ZAHa7vXDXr3cNOpT7mW2AyZCotfmjXzHjKIOhe140wqKPACAEdS0wBM1LAcz9rZAfDJebLKf6hjlgZDZD
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v19.0/415840332336349/feed:
    post:
      tags:
        - social media connect
      summary: create post
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n           \"message\":\"your_message_text\"\n\n         }"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: access_token
          in: query
          schema:
            type: string
          example: >-
            EAALFjk9QZAP8BO3eUH9evFxIpokEBuqB0e8t4JZCE7ErH5e1Mwm2VoHRVFJsUQsTAXUA1EsZBAweyWIZCVmGl3RwOqzoDPlmAQUBvJVZCqoZCnBw1ivQplZBEo4dr9WvkerKRQro9RHlY19BmE2YUR8ksF5XtcrApg1GuwXJvphcLHLzLulHUn2LIfWntnSlLPAcg1fwFKR1CbnLEI8RFZBmaVvA
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v19.0/2600212316820631/feed:
    get:
      tags:
        - social media connect
      summary: Get page feeds
      parameters:
        - name: access_token
          in: query
          schema:
            type: string
          example: 3370423926588469|CR2a1x0tk6AceWcLHMnhbRYP1_g
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v19.0/415840332336349/photos:
    post:
      tags:
        - social media connect
      summary: Post with images
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                url:
                  type: string
                  example: >-
                    https://blog.hootsuite.com/wp-content/uploads/2023/11/How-to-schedule-a-post-on-facebook-10.png
                access_token:
                  type: string
                  example: >-
                    EAAH4vqmQMSEBOyXxMTIrk0DAulW5GVl59oGIhHjAAF9ZB7fy6259fZCYPZCSOPB7S3ZCjSE34W0oILFCk5d1PfDNJBhWaauUOpohJPHMALZCUvDYnGPFguA5jQLAnyGRnZCQXWh1VDt7qDvEMdKY6w4QW3cUH7hdHjDm3wWm5ZBOmHfhP0DEJqP8QgGueEHR2E2
                message:
                  type: string
                  example: Post with images
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v19.0/415840332336349_710649527902275:
    post:
      tags:
        - social media connect
      summary: New Request
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n           \"message\":\"I am updating my Page
                post\",\n           
                \"access_token\":\"EAAH4vqmQMSEBOyXxMTIrk0DAulW5GVl59oGIhHjAAF9ZB7fy6259fZCYPZCSOPB7S3ZCjSE34W0oILFCk5d1PfDNJBhWaauUOpohJPHMALZCUvDYnGPFguA5jQLAnyGRnZCQXWh1VDt7qDvEMdKY6w4QW3cUH7hdHjDm3wWm5ZBOmHfhP0DEJqP8QgGueEHR2E2\"\n        
                }"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v19.0/101383725810030:
    get:
      tags:
        - social media connect
      summary: GET INSTA BUSINESS ACCOUNT USING PAGE ID
      parameters:
        - name: fields
          in: query
          schema:
            type: string
          example: instagram_business_account
        - name: access_token
          in: query
          schema:
            type: string
          example: '{{access_token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v19.0/17841451743265053/media:
    post:
      tags:
        - social media connect
      summary: first step post instagram collection
      requestBody:
        content: {}
      parameters:
        - name: image_url
          in: query
          schema:
            type: string
          example: >-
            https://plus.unsplash.com/premium_photo-1710294628781-466a6ad88e61?q=80&w=3540&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D
        - name: is_carousel_item
          in: query
          schema:
            type: boolean
          example: 'false'
        - name: caption
          in: query
          schema:
            type: string
          example: this is the caption for the insta post
        - name: access_token
          in: query
          schema:
            type: string
          example: '{{access_token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v19.0/17841451743265053/media_publish:
    post:
      tags:
        - social media connect
      summary: last step publish the collection
      requestBody:
        content: {}
      parameters:
        - name: creation_id
          in: query
          schema:
            type: integer
          example: '18425269465016595'
        - name: access_token
          in: query
          schema:
            type: string
          example: '{{access_token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/login:
    post:
      tags:
        - Superadmin > Authentication
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: superadmin@gmail.com
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/refresh-token/{refresh_token}:
    post:
      tags:
        - Superadmin > Authentication
      summary: refresh token
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      security:
        - noauthAuth: []
      parameters:
        - name: refresh_token
          in: path
          schema:
            type: string
          required: true
          example: '{{refresh_token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/logout:
    post:
      tags:
        - Superadmin > Authentication
      summary: logout
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/user-detail:
    get:
      tags:
        - Superadmin > Authentication
      summary: user detail
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/update-user-detail:
    post:
      tags:
        - Superadmin > Authentication
      summary: user detail update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                name:
                  type: string
                  example: Super admin
                profile_image:
                  type: string
                  format: binary
                delete_image:
                  type: string
                mobile_no:
                  type: string
                location:
                  type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/change-password:
    post:
      tags:
        - Superadmin > Authentication
      summary: change password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                old_password:
                  type: string
                  example: P@ssw0rd0
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/delete-user:
    delete:
      tags:
        - Superadmin > Authentication
      summary: delete user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/register:
    post:
      tags:
        - Superadmin > Authentication
      summary: register
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: aa
                middle_name:
                  type: string
                  example: bb
                last_name:
                  type: string
                  example: cc
                email:
                  type: string
                  example: ninave1911@eryod.com
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/resend-account-verification-mail:
    post:
      tags:
        - Superadmin > Authentication
      summary: resend email verification mail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: xipope9775@agaseo.com
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/resend-account-verification-otp-mail:
    post:
      tags:
        - Superadmin > Authentication
      summary: resend email verification otp mail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: xipope9775@agaseo.com
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/account-verification:
    post:
      tags:
        - Superadmin > Authentication
      summary: account verification
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: integer
                  example: '930259'
                email:
                  type: string
                  example: ninave1911@eryod.com
                user_id:
                  type: integer
                  example: '22'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/reset-password-mail:
    post:
      tags:
        - Superadmin > Authentication
      summary: reset password mail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: xipope9775@agaseo.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/reset-password-otp-mail:
    post:
      tags:
        - Superadmin > Authentication
      summary: reset password otp mail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: xipope9775@agaseo.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/reset-password-otp-verification:
    post:
      tags:
        - Superadmin > Authentication
      summary: reset password otp verification
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: integer
                  example: '662200'
                email:
                  type: string
                  example: xipope9775@agaseo.com
                user_id:
                  type: integer
                  example: '22'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/reset-password:
    post:
      tags:
        - Superadmin > Authentication
      summary: reset password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
                token:
                  type: integer
                  example: '12231'
                email:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/permission:
    get:
      tags:
        - Superadmin > Permission
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '100'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: show_in
          in: query
          schema:
            type: string
          description: superadmin_panel|admin_panel
          example: superadmin_panel
        - name: category
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/permission/{id}:
    get:
      tags:
        - Superadmin > Permission
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/role:
    post:
      tags:
        - Superadmin > Role
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: waiter1
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Role
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          description: 1||0
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: search_keyword
          in: query
          schema:
            type: string
          description: '||name'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/role/{id}:
    post:
      tags:
        - Superadmin > Role
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: patch
                name:
                  type: string
                  example: waiter2
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Superadmin > Role
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Role
      summary: single
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/role/{id}/assign-permission:
    post:
      tags:
        - Superadmin > Role
      summary: assign permission
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                permissions:
                  - user-list
                  - user-create
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/user:
    post:
      tags:
        - Superadmin > User
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user2@email.com
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
                name:
                  type: string
                  example: user 2
                image:
                  type: string
                  format: binary
                company_id:
                  type: string
                roles[]:
                  type: string
                status:
                  type: string
                  example: active
                mobile_no:
                  type: string
                location:
                  type: string
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > User
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: paginate
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '5'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: status
          in: query
          schema:
            type: string
          description: '||active,inactive'
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: role
          in: query
          schema:
            type: string
          description: superadmin
        - name: roles
          in: query
          schema:
            type: string
          description: '["superadmin","admin"]'
        - name: superadmin_panel_users
          in: query
          schema:
            type: string
          description: 1|0
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/user/{id}:
    post:
      tags:
        - Superadmin > User
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: patch
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
                name:
                  type: string
                  example: user 1
                company_id:
                  type: string
                roles[]:
                  type: string
                image:
                  type: string
                  format: binary
                status:
                  type: string
                  example: active
                mobile_no:
                  type: string
                location:
                  type: string
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Superadmin > User
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > User
      summary: single
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/user/{id}/assign-role:
    post:
      tags:
        - Superadmin > User
      summary: assign role
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                roles:
                  - admin
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/user/{id}/assign-permission:
    post:
      tags:
        - Superadmin > User
      summary: assign permission
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                permissions:
                  - user-list
                  - user-create
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company-id
          in: header
          schema:
            type: integer
          example: '1'
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/dashboard:
    get:
      tags:
        - Superadmin > Dashboard
      summary: dashboard
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/site-setting:
    get:
      tags:
        - Superadmin > Site Setting
      summary: site setting
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Superadmin > Site Setting
      summary: site setting update or create
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Scodus
                address:
                  type: string
                  example: Nepal
                primary_email:
                  type: string
                  example: info@scodus.com
                secondary_email:
                  type: string
                primary_phone:
                  type: string
                secondary_phone:
                  type: string
                map_location:
                  type: string
                registration_number:
                  type: string
                linkedin_url:
                  type: string
                facebook_url:
                  type: string
                twitter_url:
                  type: string
                youtube_url:
                  type: string
                instagram_url:
                  type: string
                logo:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/post:
    post:
      tags:
        - Superadmin > Post
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: bug 1
                screenshot:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Post
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: paginate
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/post/{id}:
    post:
      tags:
        - Superadmin > Post
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: patch
                description:
                  type: string
                  example: bug 1 e
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Superadmin > Post
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Superadmin > Post
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/superadmin/post/{id}/update-status:
    post:
      tags:
        - Superadmin > Post
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: in_progress
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/login/{provider}/callback:
    post:
      tags:
        - General > Authentication > social login
      summary: login callback
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: >-
                    ya29.a0Ad52N3-01jxm_7rsysdYuTyD7LHRvNa53y87cXP_U5HVCLWq1v5m663ioWi190Dvc-8WAj6yhyqKvTymDilsaOQRL6wbgegB3cO9GNLfQh23AnHt-Z0e49Dq1D_Xcy4AVVEyE7pUGkwh9CYkYXjLz2JFTOqTzF9hExL8aCgYKARASARESFQHGX2MizQ7eZ0vt8cEXlfUITkHqSQ0171
      parameters:
        - name: provider
          in: path
          schema:
            type: string
          required: true
          example: google
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/login:
    post:
      tags:
        - General > Authentication
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: augxdeveloper@gmail.com
                password:
                  type: string
                  example: P@ssw0rd
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/refresh-token/{refresh_token}:
    post:
      tags:
        - General > Authentication
      summary: refresh token
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      security:
        - noauthAuth: []
      parameters:
        - name: refresh_token
          in: path
          schema:
            type: string
          required: true
          example: '{{refresh_token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/logout:
    post:
      tags:
        - General > Authentication
      summary: logout
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/user-detail:
    get:
      tags:
        - General > Authentication
      summary: user detail
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/update-user-detail:
    post:
      tags:
        - General > Authentication
      summary: user detail update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                first_name:
                  type: string
                  example: Super admin
                last_name:
                  type: string
                middle_name:
                  type: string
                image:
                  type: string
                  format: binary
                remove_image:
                  type: string
                  description: true,false,1,0
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/change-password:
    post:
      tags:
        - General > Authentication
      summary: change password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                old_password:
                  type: string
                  example: P@ssw0rd0
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/delete-user:
    delete:
      tags:
        - General > Authentication
      summary: delete user
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/register:
    post:
      tags:
        - General > Authentication
      summary: register
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: Aug
                middle_name:
                  type: string
                last_name:
                  type: string
                  example: X
                email:
                  type: string
                  example: augxdeveloper@gmail.com
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/resend-account-verification-mail:
    post:
      tags:
        - General > Authentication
      summary: resend email verification mail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: augxdeveloper@gmail.com
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/resend-account-verification-otp-mail:
    post:
      tags:
        - General > Authentication
      summary: resend email verification otp mail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: xipope9775@agaseo.com
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/account-verification:
    post:
      tags:
        - General > Authentication
      summary: account verification
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: integer
                  example: '382427'
                email:
                  type: string
                  example: augxdeveloper@gmail.com
                user_id:
                  type: integer
                  example: '22'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/reset-password-mail:
    post:
      tags:
        - General > Authentication
      summary: reset password mail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: bikashxsingh@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/reset-password-otp-mail:
    post:
      tags:
        - General > Authentication
      summary: reset password otp mail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: xipope9775@agaseo.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/reset-password-otp-verification:
    post:
      tags:
        - General > Authentication
      summary: reset password otp verification
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: integer
                  example: '208702'
                email:
                  type: string
                  example: bikashxsingh@gmail.com
                user_id:
                  type: integer
                  example: '22'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/reset-password:
    post:
      tags:
        - General > Authentication
      summary: reset password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
                token:
                  type: integer
                  example: '208702'
                email:
                  type: string
                  example: bikashxsingh@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/social-media:
    post:
      tags:
        - General > Social Media
      summary: store
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                type: instagram
                access_token: dfafdaf00
                userID: '123'
                data: ''
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - General > Social Media
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: paginate
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/social-media/{id}:
    post:
      tags:
        - General > Social Media
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                _method: PUT
                type: instagram
                access_token: dfafdaf00
                userID: '123'
                data: ''
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - General > Social Media
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - General > Social Media
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/social-media/update-or-create:
    post:
      tags:
        - General > Social Media
      summary: update or create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                type: facebook
                access_token: >-
                  EAANuNuPz88EBO68KKj7cIJLdQiwsLq68i4PRmWgez4v5m459pZAIsu1JIzgyIX40JZAwAZBkSvbA6ZAIfMgZCJFhDlZB8ZCdZBjXIKBBnOihlKksYOwLxMhNoegSvt8Nh1vLnjlAhdZBsIf6SZCqJQNJl9NOuAZBvSn0FdDZB9bxmUTiQLGR7nVoV8BKlkPilGVKH71YOvi6WZBDqPOYADxZAp3gZDZD
                userID: '2600831653425364'
                data:
                  userID: '2600831653425364'
                  expiresIn: 6276
                  accessToken: >-
                    EAANuNuPz88EBO1MzSjbUDKbZBQcISiLZBl6ntd8ZB7FIfgoYYHRZA5kgzI1ZCMZCM5DDSzi5NOReIkFsSuD2EBlfwtkwgboX4NNRE30FDW0ZCHOdtNFEPn04cIMbd8OpwHlAt6ol58rF9ejCGZBxgcq36FqZAV8UZCRKXSvTTFijvZBErEcS5LCaMOpNjre10ZAhDyviw8vHbcNIctWXks38ygZDZD
                  signedRequest: >-
                    tyCf8yg9VhxXA9iROXyInC2R92ckkAbW-dBJJy0iSbQ.eyJ1c2VyX2lkIjoiMjYwMDgzMTY1MzQyNTM2NCIsImNvZGUiOiJBUUJ1VDk0NUpuQWRPNTR4Nmp6bDV4S085amp0c19kRkdDUHNCa0xpU2gzQmM0NTJPZnJKblVGNUp6TkxVMUlRQ3hyTGNMdmJ1VEF4ZUpVWkRhanFkX29KaHRJakRwVFdFbFlUMEVfUlhCX1d6VEJKRXg2dmljSDRYaU95NzJHQm5HTDZFS01FWXpGRmZwX2VmYkZfbGhnS3VVWlVuT3JMTWdiVHl0MkMxb29aS1dBd0YybVRYcExPeEpVTlY5WUZRb1Bja1N4bUdIVEx0LVpZZjhmTlczLVZFNTdaWlVkNnQ0UEVFY1RyZnZFeVlsNmE5VkN5TUU1MlA5NGNIdHNDTUJ0alM3NjJPQlBrN1dsOGZJMm1fT240MG5McjZsSmVPanlDR0Q1OEM5dzMyRHdXOUI4eVBxWUdpWEhZUDVPWWZ3ZzRieVNibEtQekpBNE9IUlZJaE1YTXhZci0xQzY0WEpWRnh6R2VUYzh5OGFqazFmRjV4NWdqMFllUjREX3BUR2ciLCJhbGdvcml0aG0iOiJITUFDLVNIQTI1NiIsImlzc3VlZF9hdCI6MTcxNDcxNjkyNH0
                  graphDomain: facebook
                  grantedScopes: >-
                    pages_show_list,instagram_basic,instagram_content_publish,pages_read_engagement,pages_manage_posts
                  data_access_expiration_time: 1722492924
                  id: '2600831653425364'
                  first_name: Saurav
                  last_name: Ghimire
                  name: Saurav Ghimire
                  name_format: '{first} {last}'
                  picture:
                    data:
                      height: 50
                      is_silhouette: false
                      url: >-
                        https://platform-lookaside.fbsbx.com/platform/profilepic/?asid=2600831653425364&height=50&width=50&ext=1717308925&hash=Abb7G-NHcapOzbBhOwo95LyL
                      width: 50
                  short_name: Saurav
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/social-media/{id}/update-status:
    post:
      tags:
        - General > Social Media
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                status:
                  type: string
                  example: active
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/post:
    post:
      tags:
        - General > Post
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: post 100000
                is_draft:
                  type: boolean
                  description: true,false,1,0
                  example: 'false'
                publish_now:
                  type: boolean
                  description: true,false,1,0|required_if:is_draft,false,0
                  example: 'true'
                status:
                  type: string
                  description: draft|publish|schedulea
                publish_date:
                  type: string
                  description: datetime||required_if:publish_now,false,0
                attachments[]:
                  type: string
                  format: binary
                social_media_array[1][]:
                  type: integer
                  example: '2'
                social_media_array[2][]:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - General > Post
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: paginate
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: is_draft
          in: query
          schema:
            type: string
        - name: social_media_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/post/{id}:
    post:
      tags:
        - General > Post
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: patch
                title:
                  type: string
                  example: post 100000
                status:
                  type: string
                publish_date:
                  type: string
                social_media_array[1][]:
                  type: integer
                  example: '2'
                social_media_array[2][]:
                  type: integer
                  example: '1'
                attachments[]:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - General > Post
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - General > Post
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/post/{id}/update-status:
    post:
      tags:
        - General > Post
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                status:
                  type: string
                  example: active
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/post/{id}/attachment/{file_id}/rename:
    post:
      tags:
        - General > Post
      summary: attachment rename
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: put
                name:
                  type: string
                  example: task 1edatt
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
        - name: file_id
          in: path
          schema:
            type: integer
          required: true
          example: '73'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/post/{id}/attachment/{file_id}:
    delete:
      tags:
        - General > Post
      summary: attachment delete
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
        - name: file_id
          in: path
          schema:
            type: integer
          required: true
          example: '74'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/post/{id}/attachment/{file_id}/download:
    get:
      tags:
        - General > Post
      summary: attachment download
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
        - name: file_id
          in: path
          schema:
            type: integer
          required: true
          example: '76'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/note:
    post:
      tags:
        - General > Note
      summary: store
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: instagram
                description: asdfdsdaf
                status: active
                note_date: '1985-09-25 17:45:30.005'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - General > Note
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: paginate
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: search_keyword
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/note/{id}:
    post:
      tags:
        - General > Note
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                _method: PUT
                title: instagram
                description: asdfdsdaf
                status: active
                note_date: '1985-09-25T17:45:30.005'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - General > Note
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - General > Note
      summary: show
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/note/{id}/update-status:
    post:
      tags:
        - General > Note
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                status:
                  type: string
                  example: active
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
